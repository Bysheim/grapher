{"ast":null,"code":"var _jsxFileName = \"/home/lby005/Desktop/prodj/grapher/src/components/Canvas/Canvas.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport Vertex from \"../Graph/Vertex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ext = {\n  radius: 30\n};\nconst contain = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\nconst Canvas = props => {\n  _s();\n  const canvas_ref = useRef(null);\n  const [verticies, updateVerticies] = useState([{\n    x: 10,\n    y: 10\n  }, {\n    x: 200,\n    y: 40\n  }, {\n    x: 60,\n    y: 250\n  }]);\n  const [edges, updateEdges] = useState([{\n    a: 0,\n    b: 1\n  }, {\n    a: 1,\n    b: 2\n  }]);\n  const [targetID, setTargetID] = useState(-1);\n  const get_local_position = e => {\n    const canvas = canvas_ref.current.getBoundingClientRect();\n    return {\n      x: contain(e.clientX - canvas.left - ext.radius / 2, 0, canvas.width - ext.radius),\n      y: contain(e.clientY - canvas.top - ext.radius / 2, 0, canvas.height - ext.radius)\n    };\n  };\n  const newVertex = e => {\n    updateVerticies(prevVert => [...prevVert, get_local_position(e)]);\n  };\n  const removeVertex = (e, id) => {\n    e.stopPropagation();\n    e.preventDefault();\n    updateVerticies(prevVert => prevVert.filter((_, i) => i != id));\n  };\n  const move = e => {\n    if (targetID == -1) return;\n    const n = [...verticies];\n    n[targetID] = get_local_position(e);\n    updateVerticies(old => n);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvas_ref,\n    className: \"canvas_container\",\n    onClick: e => newVertex(e),\n    onMouseMove: e => move(e),\n    onMouseUp: () => setTargetID(-1),\n    children: [verticies.map((vertex, i) => /*#__PURE__*/_jsxDEV(Vertex, {\n      delete: e => removeVertex(e, i),\n      pick: () => setTargetID(i),\n      radius: ext.radius,\n      position: vertex\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 36\n    }, this)), verticies.length > 2 ? /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: '100%',\n      height: '100%',\n      children: edges.map((edge, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: verticies[edge.a].x + ext.radius / 2,\n        y1: verticies[edge.a].y + ext.radius / 2,\n        x2: verticies[edge.b].x + ext.radius / 2,\n        y2: verticies[edge.b].y + ext.radius / 2,\n        stroke: \"yellow\",\n        strokeWidth: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"2LDPfVynWZEMD60RJMZj4f+o0Fw=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["useRef","useState","Vertex","jsxDEV","_jsxDEV","ext","radius","contain","value","min","max","Math","Canvas","props","_s","canvas_ref","verticies","updateVerticies","x","y","edges","updateEdges","a","b","targetID","setTargetID","get_local_position","e","canvas","current","getBoundingClientRect","clientX","left","width","clientY","top","height","newVertex","prevVert","removeVertex","id","stopPropagation","preventDefault","filter","_","i","move","n","old","ref","className","onClick","onMouseMove","onMouseUp","children","map","vertex","delete","pick","position","random","fileName","_jsxFileName","lineNumber","columnNumber","length","edge","x1","y1","x2","y2","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/home/lby005/Desktop/prodj/grapher/src/components/Canvas/Canvas.tsx"],"sourcesContent":["import { MouseEvent, ReactNode, useCallback, useEffect, useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport Vertex from \"../Graph/Vertex\";\n\ninterface Props {\n\n}\n\nconst ext = {\n  radius : 30\n}\n\n\nconst contain = (value:number, min: number, max: number) => {\n  return Math.min(Math.max(value,min),max);\n}\n\nconst Canvas = (props: Props) => {\n\n  const canvas_ref = useRef<HTMLDivElement>(null);\n\n  const [verticies, updateVerticies] = useState<{x:number,y:number}[]>([{x:10,y:10},{x:200,y:40},{x:60,y:250}]);\n  const [edges, updateEdges] = useState<{a:number,b:number}[]>([{a:0,b:1}, {a:1,b:2}]);\n  const [targetID, setTargetID] = useState<number>(-1);\n\n\n  const get_local_position = (e: MouseEvent) => {\n    const canvas = canvas_ref.current!.getBoundingClientRect();\n    return {\n      x: contain(e.clientX - canvas.left - ext.radius/2,0,canvas.width - ext.radius),\n      y: contain(e.clientY - canvas.top - ext.radius/2,0, canvas.height - ext.radius),\n    }\n  }\n\n  const newVertex = (e: MouseEvent) => {\n    updateVerticies((prevVert: {x:number,y:number}[]) => (\n      [...prevVert, get_local_position(e) ]\n    ));\n  }\n\n\n  const removeVertex = (e: MouseEvent, id : number) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    updateVerticies((prevVert: {x:number,y:number}[]) => (\n      prevVert.filter((_,i) => i != id)\n    ));\n  }\n\n\n  const move = (e: MouseEvent) => {\n    if (targetID == -1 ) return;\n    const n = [...verticies];\n    n[targetID] = get_local_position(e);\n    updateVerticies(old => n);\n  }\n\n  return (\n    <div \n    ref = { canvas_ref}\n    className=\"canvas_container\"\n    onClick={(e: MouseEvent) => newVertex(e)}\n    onMouseMove={(e: MouseEvent) => move(e)}\n    onMouseUp={() => setTargetID(-1)}>\n\n      {verticies.map((vertex,i) => <Vertex key={Math.random()} delete={(e: MouseEvent) => removeVertex(e,i)} pick={() => setTargetID(i)} radius={ext.radius} position={vertex}></Vertex>)}\n\n      {verticies.length > 2 ? \n      <svg width={'100%'} height={'100%'}>\n          {edges.map((edge,i) => <line x1={verticies[edge.a].x + ext.radius/2} y1={verticies[edge.a].y + ext.radius/2} x2={verticies[edge.b].x + ext.radius/2} y2={verticies[edge.b].y + ext.radius/2} stroke=\"yellow\" strokeWidth={5}></line>)}\n      </svg> : null\n    }\n\n\n    </div>\n  );\n};\n\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}