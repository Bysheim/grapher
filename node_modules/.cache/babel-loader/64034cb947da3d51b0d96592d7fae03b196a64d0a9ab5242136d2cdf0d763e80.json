{"ast":null,"code":"var _jsxFileName = \"/home/lby005/Desktop/prodj/delt/grapher/src/components/Canvas/Canvas.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport Vertex, { Edge } from \"./GraphComponent\";\nimport { relPos } from \"../../tools/Geometry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = props => {\n  _s();\n  const canvas_ref = useRef(null);\n  const [dragging, isDragging] = useState(false);\n  const get_local_position = e => {\n    const canvas = canvas_ref.current.getBoundingClientRect();\n    return {\n      x: relPos(e.clientX, canvas.left, canvas.width),\n      y: relPos(e.clientY, canvas.top, canvas.height)\n    };\n  };\n  const update = (e, id = \"\") => {\n    props.updateGraph(id, get_local_position(e));\n    e.stopPropagation();\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvas_ref,\n    className: \"canvas_container\",\n    onMouseDown: e => update(e),\n    onMouseMove: e => {\n      if (dragging) update(e, props.active);\n    },\n    onContextMenu: e => {\n      e.preventDefault();\n      console.log(props.graph);\n    },\n    onMouseUp: () => isDragging(false),\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: '100%',\n      height: '100%',\n      children: [Object.entries(props.graph.edges).map(edge => (!edge[1].double || props.graph.directed) && /*#__PURE__*/_jsxDEV(Edge, {\n        id: edge[0],\n        select: update,\n        setHovered: props.setHoverd,\n        value: edge[1].weight.toString(),\n        getColor: props.getColor,\n        position: props.graph.vertices[edge[1].vertices.a].position,\n        position2: props.graph.vertices[edge[1].vertices.b].position,\n        directed: props.graph.directed,\n        weighted: props.graph.weighted\n      }, edge[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 54\n      }, this)), Object.entries(props.graph.vertices).map(vertex => /*#__PURE__*/_jsxDEV(Vertex, {\n        id: vertex[0],\n        select: (e, id) => {\n          update(e, id);\n          isDragging(true);\n        },\n        setHovered: props.setHoverd,\n        value: vertex[1].symbol,\n        getColor: props.getColor,\n        position: vertex[1].position,\n        radius: 3\n      }, vertex[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"xwTg0sWAIWvPLgjOna0mrnpUEJU=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["useRef","useState","Vertex","Edge","relPos","jsxDEV","_jsxDEV","Canvas","props","_s","canvas_ref","dragging","isDragging","get_local_position","e","canvas","current","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","update","id","updateGraph","stopPropagation","preventDefault","ref","className","onMouseDown","onMouseMove","active","onContextMenu","console","log","graph","onMouseUp","children","Object","entries","edges","map","edge","double","directed","select","setHovered","setHoverd","value","weight","toString","getColor","position","vertices","a","position2","b","weighted","fileName","_jsxFileName","lineNumber","columnNumber","vertex","symbol","radius","_c","$RefreshReg$"],"sources":["/home/lby005/Desktop/prodj/delt/grapher/src/components/Canvas/Canvas.tsx"],"sourcesContent":["import { MouseEvent, useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport { IGraph } from \"../Graph/Graph\";\nimport Vertex, { Edge } from \"./GraphComponent\";\nimport { relPos } from \"../../tools/Geometry\";\n\ninterface Props { \n  graph : IGraph,\n  updateGraph : Function\n  active : string,\n  hovered : string,\n  setHoverd : Function,\n  getColor : Function\n}\n\n\nconst Canvas = (props: Props) => {\n\n  const canvas_ref = useRef<HTMLDivElement>(null);\n  const [dragging, isDragging] = useState<boolean>(false);\n\n\n  const get_local_position = (e: MouseEvent) => {\n    const canvas = canvas_ref.current!.getBoundingClientRect();\n\n    return {\n      x: relPos(e.clientX,canvas.left,canvas.width),\n      y: relPos(e.clientY,canvas.top,canvas.height),\n    }\n  }\n\n  const update = (e: MouseEvent,id:string=\"\") => {\n    props.updateGraph(id, get_local_position(e));\n\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  \n\n\n  return (\n    <div \n    ref = { canvas_ref}\n    className=\"canvas_container\"\n    onMouseDown={(e: MouseEvent) => update(e)}\n    onMouseMove={(e: MouseEvent) => {if(dragging) update(e, props.active)}}\n    onContextMenu={(e : MouseEvent) => {e.preventDefault();  console.log(props.graph);}}\n    onMouseUp={() => isDragging(false)}>\n     <svg width={'100%'} height={'100%'}>\n      {Object.entries(props.graph.edges).map((edge) => \n        (!edge[1].double || props.graph.directed) && <Edge \n          key={edge[0]}\n          id={edge[0]}\n          select={update}\n          setHovered={props.setHoverd}\n          value={edge[1].weight.toString()}\n          getColor={props.getColor}\n          position={props.graph.vertices[edge[1].vertices.a].position} \n\n          position2={props.graph.vertices[edge[1].vertices.b].position} \n          directed={props.graph.directed}\n          weighted={props.graph.weighted}\n        ></Edge>\n      )}\n\n      {Object.entries(props.graph.vertices).map((vertex) => \n        <Vertex \n          key={vertex[0]} \n          id={vertex[0]}\n          select={(e:MouseEvent,id:string) => {update(e,id); isDragging(true)}} \n          setHovered={props.setHoverd}\n          value={vertex[1].symbol}\n          getColor={props.getColor}\n          position={vertex[1].position}\n\n          radius={3} \n        ></Vertex>\n      )}\n      </svg>\n    \n\n\n    </div>\n  );\n};\n\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}