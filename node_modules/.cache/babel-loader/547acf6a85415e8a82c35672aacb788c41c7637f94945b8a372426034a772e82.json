{"ast":null,"code":"var _jsxFileName = \"/home/lby005/Desktop/prodj/grapher/src/components/Canvas/Canvas.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport GraphComponent from \"../Graph/GraphComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contain = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\nconst Canvas = props => {\n  _s();\n  const canvas_ref = useRef(null);\n  const [radius, setRadius] = useState(50);\n  const [dragging, isDragging] = useState(false);\n  const get_local_position = e => {\n    const canvas = canvas_ref.current.getBoundingClientRect();\n    return {\n      x: contain(e.clientX - canvas.left, radius, canvas.width - radius),\n      y: contain(e.clientY - canvas.top, radius, canvas.height - radius)\n    };\n  };\n  const move = e => {\n    if (!dragging) return;\n    props.grafEdit.moveVertex(props.active, get_local_position(e));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvas_ref,\n    className: \"canvas_container\",\n    onClick: e => e.ctrlKey ? props.grafEdit.newVertex(get_local_position(e)) : () => {},\n    onMouseMove: e => move(e),\n    onContextMenu: e => {\n      e.preventDefault();\n      console.log(props.graph);\n    },\n    onMouseUp: () => isDragging(false),\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: '100%',\n      height: '100%',\n      children: [Object.entries(props.graph.edges).map(edge => /*#__PURE__*/_jsxDEV(GraphComponent, {\n        onMouseDown: () => props.setActive(edge[0]),\n        active: props.active == edge[0],\n        offset: radius,\n        value: edge[1].weight.toString(),\n        position: props.graph.vertices[edge[1].vertices.a].position,\n        position2: props.graph.vertices[edge[1].vertices.b].position,\n        onClick: () => {},\n        onContextMenu: () => props.grafEdit.deleteEdge(edge[0])\n      }, edge[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)), Object.entries(props.graph.vertices).map(vertex => /*#__PURE__*/_jsxDEV(GraphComponent, {\n        onMouseDown: () => {\n          props.setActive(vertex[0]);\n          isDragging(true);\n        },\n        active: props.active == vertex[0],\n        offset: radius,\n        value: vertex[1].symbol,\n        position: vertex[1].position,\n        onClick: () => props.grafEdit.newEdge(vertex[0], props.active),\n        onContextMenu: () => props.grafEdit.deleteVertex(vertex[0])\n      }, vertex[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"8fKSk+SVNiXx8JfRqHs0YYtoqaY=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["useRef","useState","GraphComponent","jsxDEV","_jsxDEV","contain","value","min","max","Math","Canvas","props","_s","canvas_ref","radius","setRadius","dragging","isDragging","get_local_position","e","canvas","current","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","move","grafEdit","moveVertex","active","ref","className","onClick","ctrlKey","newVertex","onMouseMove","onContextMenu","preventDefault","console","log","graph","onMouseUp","children","Object","entries","edges","map","edge","onMouseDown","setActive","offset","weight","toString","position","vertices","a","position2","b","deleteEdge","fileName","_jsxFileName","lineNumber","columnNumber","vertex","symbol","newEdge","deleteVertex","_c","$RefreshReg$"],"sources":["/home/lby005/Desktop/prodj/grapher/src/components/Canvas/Canvas.tsx"],"sourcesContent":["import { MouseEvent, ReactNode, useCallback, useEffect, useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport GraphComponent from \"../Graph/GraphComponent\";\nimport { IGraph } from \"../Graph/Graph\";\n\ninterface Props { \n  graph : IGraph,\n  grafEdit : {\n    newVertex : Function,\n    deleteVertex : Function,\n    newEdge : Function,\n    deleteEdge: Function,\n    moveVertex: Function\n  },\n  active : string,\n  setActive : Function\n}\n\n\nconst contain = (value:number, min: number, max: number) => {\n  return Math.min(Math.max(value,min),max);\n}\n\nconst Canvas = (props: Props) => {\n\n  const canvas_ref = useRef<HTMLDivElement>(null);\n\n  const [radius, setRadius] = useState<number>(50);\n  const [dragging, isDragging] = useState<boolean>(false);\n\n\n  const get_local_position = (e: MouseEvent) => {\n    const canvas = canvas_ref.current!.getBoundingClientRect();\n    \n    return {\n      x: contain(e.clientX - canvas.left,radius,canvas.width - radius),\n      y: contain(e.clientY - canvas.top,radius, canvas.height - radius),\n    }\n  }\n\n  const move = (e: MouseEvent) => {\n    if ( !dragging ) return;\n    props.grafEdit.moveVertex(props.active, get_local_position(e));\n  }\n  \n\n\n  return (\n    <div \n    ref = { canvas_ref}\n    className=\"canvas_container\"\n    onClick={(e: MouseEvent) => e.ctrlKey ? props.grafEdit.newVertex(get_local_position(e)) : () => {}}\n    onMouseMove={(e: MouseEvent) => move(e)}\n    onContextMenu={(e : MouseEvent) => {e.preventDefault();  console.log(props.graph);}}\n    onMouseUp={() => isDragging(false)}>\n     <svg width={'100%'} height={'100%'}>\n      {Object.entries(props.graph.edges).map((edge) => \n        <GraphComponent \n          key={edge[0]} \n          onMouseDown={() => props.setActive(edge[0])} \n          active={props.active == edge[0]} \n          offset={radius}\n          value={edge[1].weight.toString()}\n          position={props.graph.vertices[edge[1].vertices.a].position} \n          position2={props.graph.vertices[edge[1].vertices.b].position} \n          onClick={() => {}}\n          onContextMenu={() => props.grafEdit.deleteEdge(edge[0])}\n        ></GraphComponent>\n      )}\n\n{Object.entries(props.graph.vertices).map((vertex) => \n        <GraphComponent \n          key={vertex[0]} \n          onMouseDown={() => {props.setActive(vertex[0]); isDragging(true)}} \n          active={props.active == vertex[0]} \n          offset={radius} \n          value={vertex[1].symbol}\n          position={vertex[1].position}\n          onClick={() => props.grafEdit.newEdge(vertex[0], props.active)}\n          onContextMenu={() => props.grafEdit.deleteVertex(vertex[0])}\n        ></GraphComponent>\n      )}\n      </svg>\n    \n\n\n    </div>\n  );\n};\n\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}