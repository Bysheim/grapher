{"ast":null,"code":"export const normal = (p1, p2, times = 2) => {\n  let dx = p2.x - p1.x;\n  let dy = p2.y - p1.y;\n  let dLength = Math.sqrt(dx ** 2 + dy ** 2);\n  return {\n    x: -dy / dLength * times,\n    y: dx / dLength * times\n  };\n};\nexport const average = (a, b) => {\n  return (a + b) / 2;\n};\nexport const contain = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};","map":{"version":3,"names":["normal","p1","p2","times","dx","x","dy","y","dLength","Math","sqrt","average","a","b","contain","value","min","max"],"sources":["C:/Users/larsb/Desktop/knowit/grapher/src/tools/Geometry.ts"],"sourcesContent":["export const normal = (p1:{x:number,y:number}, p2: {x:number,y:number}, times : number = 2) => {\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    let dLength = Math.sqrt(dx ** 2 + dy**2);\r\n    \r\n    return {x : -dy/dLength * times, y : dx/dLength * times};\r\n}\r\n\r\n\r\nexport const average = (a:number, b: number) => {\r\n    return (a + b) / 2\r\n}\r\n\r\nexport const contain = (value:number, min: number, max: number) => {\r\n    return Math.min(Math.max(value,min),max);\r\n}"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAGA,CAACC,EAAsB,EAAEC,EAAuB,EAAEC,KAAc,GAAG,CAAC,KAAK;EAC3F,IAAIC,EAAE,GAAGF,EAAE,CAACG,CAAC,GAAGJ,EAAE,CAACI,CAAC;EACpB,IAAIC,EAAE,GAAGJ,EAAE,CAACK,CAAC,GAAGN,EAAE,CAACM,CAAC;EAEpB,IAAIC,OAAO,GAAGC,IAAI,CAACC,IAAI,CAACN,EAAE,IAAI,CAAC,GAAGE,EAAE,IAAE,CAAC,CAAC;EAExC,OAAO;IAACD,CAAC,EAAG,CAACC,EAAE,GAACE,OAAO,GAAGL,KAAK;IAAEI,CAAC,EAAGH,EAAE,GAACI,OAAO,GAAGL;EAAK,CAAC;AAC5D,CAAC;AAGD,OAAO,MAAMQ,OAAO,GAAGA,CAACC,CAAQ,EAAEC,CAAS,KAAK;EAC5C,OAAO,CAACD,CAAC,GAAGC,CAAC,IAAI,CAAC;AACtB,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGA,CAACC,KAAY,EAAEC,GAAW,EAAEC,GAAW,KAAK;EAC/D,OAAOR,IAAI,CAACO,GAAG,CAACP,IAAI,CAACQ,GAAG,CAACF,KAAK,EAACC,GAAG,CAAC,EAACC,GAAG,CAAC;AAC5C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}