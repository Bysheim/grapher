{"ast":null,"code":"var _jsxFileName = \"/home/lby005/Desktop/prodj/grapher/src/components/Canvas/Canvas.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport Vertex, { Edge } from \"./GraphComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contain = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\nconst Canvas = props => {\n  _s();\n  const canvas_ref = useRef(null);\n  const [dragging, isDragging] = useState(false);\n  const get_local_position = e => {\n    const canvas = canvas_ref.current.getBoundingClientRect();\n    return {\n      x: contain((e.clientX - canvas.left) * 100 / canvas.width, 0, 100),\n      y: contain((e.clientY - canvas.top) * 100 / canvas.height, 0, 100)\n    };\n  };\n  const move = e => {\n    if (!dragging) return;\n    props.grafEdit.moveVertex(props.active, get_local_position(e));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvas_ref,\n    className: \"canvas_container\",\n    onClick: e => e.ctrlKey ? props.grafEdit.newVertex(get_local_position(e)) : () => {},\n    onMouseMove: e => move(e),\n    onContextMenu: e => {\n      e.preventDefault();\n      console.log(props.graph);\n    },\n    onMouseUp: () => isDragging(false),\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: '100%',\n      height: '100%',\n      children: [Object.entries(props.graph.edges).map(edge => /*#__PURE__*/_jsxDEV(Edge, {\n        active: props.active == edge[0],\n        value: edge[1].weight.toString(),\n        position: props.graph.vertices[edge[1].vertices.a].position,\n        position2: props.graph.vertices[edge[1].vertices.b].position,\n        select: () => {\n          props.setActive(edge[0]);\n        },\n        radius: 9,\n        delete: () => props.grafEdit.deleteEdge(edge[0])\n      }, edge[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)), Object.entries(props.graph.vertices).map(vertex => /*#__PURE__*/_jsxDEV(Vertex, {\n        select: () => {\n          props.setActive(vertex[0]);\n          isDragging(true);\n        },\n        active: props.active == vertex[0],\n        radius: 10,\n        value: vertex[1].symbol,\n        position: vertex[1].position,\n        edgeTo: () => props.grafEdit.newEdge(vertex[0], props.active),\n        delete: () => props.grafEdit.deleteVertex(vertex[0])\n      }, vertex[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"xwTg0sWAIWvPLgjOna0mrnpUEJU=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["useRef","useState","Vertex","Edge","jsxDEV","_jsxDEV","contain","value","min","max","Math","Canvas","props","_s","canvas_ref","dragging","isDragging","get_local_position","e","canvas","current","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","move","grafEdit","moveVertex","active","ref","className","onClick","ctrlKey","newVertex","onMouseMove","onContextMenu","preventDefault","console","log","graph","onMouseUp","children","Object","entries","edges","map","edge","weight","toString","position","vertices","a","position2","b","select","setActive","radius","delete","deleteEdge","fileName","_jsxFileName","lineNumber","columnNumber","vertex","symbol","edgeTo","newEdge","deleteVertex","_c","$RefreshReg$"],"sources":["/home/lby005/Desktop/prodj/grapher/src/components/Canvas/Canvas.tsx"],"sourcesContent":["import { MouseEvent, useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport { IGraph } from \"../Graph/Graph\";\nimport Vertex, { Edge } from \"./GraphComponent\";\n\ninterface Props { \n  graph : IGraph,\n  grafEdit : {\n    newVertex : Function,\n    deleteVertex : Function,\n    newEdge : Function,\n    deleteEdge: Function,\n    moveVertex: Function\n  },\n  active : string,\n  setActive : Function\n}\n\n\nconst contain = (value:number, min: number, max: number) => {\n  return Math.min(Math.max(value,min),max);\n}\n\nconst Canvas = (props: Props) => {\n\n  const canvas_ref = useRef<HTMLDivElement>(null);\n\n  const [dragging, isDragging] = useState<boolean>(false);\n\n\n  const get_local_position = (e: MouseEvent) => {\n    const canvas = canvas_ref.current!.getBoundingClientRect();\n    \n    return {\n      x: contain((e.clientX - canvas.left) * 100/canvas.width,0,100),\n      y: contain((e.clientY - canvas.top)* 100/canvas.height,0, 100),\n    }\n  }\n\n  const move = (e: MouseEvent) => {\n    if ( !dragging ) return;\n    props.grafEdit.moveVertex(props.active, get_local_position(e));\n  }\n  \n\n\n  return (\n    <div \n    ref = { canvas_ref}\n    className=\"canvas_container\"\n    onClick={(e: MouseEvent) => e.ctrlKey ? props.grafEdit.newVertex(get_local_position(e)) : () => {}}\n    onMouseMove={(e: MouseEvent) => move(e)}\n    onContextMenu={(e : MouseEvent) => {e.preventDefault();  console.log(props.graph);}}\n    onMouseUp={() => isDragging(false)}>\n     <svg width={'100%'} height={'100%'}>\n      {Object.entries(props.graph.edges).map((edge) => \n        <Edge \n          key={edge[0]} \n          active={props.active == edge[0]} \n          value={edge[1].weight.toString()}\n          position={props.graph.vertices[edge[1].vertices.a].position} \n          position2={props.graph.vertices[edge[1].vertices.b].position} \n          select={() => {props.setActive(edge[0])}}\n          radius={9} \n          delete={() => props.grafEdit.deleteEdge(edge[0])}\n        ></Edge>\n      )}\n\n      {Object.entries(props.graph.vertices).map((vertex) => \n        <Vertex \n          key={vertex[0]} \n          select={() => {props.setActive(vertex[0]); isDragging(true)}} \n          active={props.active == vertex[0]} \n          radius={10} \n          value={vertex[1].symbol}\n          position={vertex[1].position}\n          edgeTo={() => props.grafEdit.newEdge(vertex[0], props.active)}\n          delete={() => props.grafEdit.deleteVertex(vertex[0])}\n        ></Vertex>\n      )}\n      </svg>\n    \n\n\n    </div>\n  );\n};\n\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}