{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\larsb\\\\Desktop\\\\knowit\\\\grapher\\\\src\\\\components\\\\Canvas\\\\Canvas.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport Vertex, { Edge } from \"./GraphComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contain = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\nconst Canvas = props => {\n  _s();\n  const canvas_ref = useRef(null);\n  const [dragging, isDragging] = useState(false);\n  const get_local_position = e => {\n    const canvas = canvas_ref.current.getBoundingClientRect();\n    return {\n      x: contain((e.clientX - canvas.left) * 100 / canvas.width, 0, 100),\n      y: contain((e.clientY - canvas.top) * 100 / canvas.height, 0, 100)\n    };\n  };\n  const update = (e, id = \"\") => {\n    props.updateGraph(id, get_local_position(e));\n    e.stopPropagation();\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvas_ref,\n    className: \"canvas_container\",\n    onMouseDown: e => update(e),\n    onMouseMove: e => {\n      if (dragging) update(e, props.active);\n    },\n    onContextMenu: e => {\n      e.preventDefault();\n      console.log(props.graph);\n    },\n    onMouseUp: () => isDragging(false),\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: '100%',\n      height: '100%',\n      children: [Object.entries(props.graph.edges).map(edge => (!edge[1].double || props.graph.directed) && /*#__PURE__*/_jsxDEV(Edge, {\n        id: edge[0],\n        select: update,\n        setHovered: props.setHoverd,\n        value: edge[1].weight.toString(),\n        getColor: props.getColor,\n        position: props.graph.vertices[edge[1].vertices.a].position,\n        position2: props.graph.vertices[edge[1].vertices.b].position,\n        directed: props.graph.directed,\n        weighted: props.graph.weighted\n      }, edge[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 54\n      }, this)), Object.entries(props.graph.vertices).map(vertex => /*#__PURE__*/_jsxDEV(Vertex, {\n        id: vertex[0],\n        select: (e, id) => {\n          update(e, id);\n          isDragging(true);\n        },\n        setHovered: props.setHoverd,\n        value: vertex[1].symbol,\n        getColor: props.getColor,\n        position: vertex[1].position,\n        radius: 3\n      }, vertex[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"xwTg0sWAIWvPLgjOna0mrnpUEJU=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["useRef","useState","Vertex","Edge","jsxDEV","_jsxDEV","contain","value","min","max","Math","Canvas","props","_s","canvas_ref","dragging","isDragging","get_local_position","e","canvas","current","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","update","id","updateGraph","stopPropagation","preventDefault","ref","className","onMouseDown","onMouseMove","active","onContextMenu","console","log","graph","onMouseUp","children","Object","entries","edges","map","edge","double","directed","select","setHovered","setHoverd","weight","toString","getColor","position","vertices","a","position2","b","weighted","fileName","_jsxFileName","lineNumber","columnNumber","vertex","symbol","radius","_c","$RefreshReg$"],"sources":["C:/Users/larsb/Desktop/knowit/grapher/src/components/Canvas/Canvas.tsx"],"sourcesContent":["import { MouseEvent, useRef, useState } from \"react\";\r\nimport \"../../styles/Canvas/Canvas.css\";\r\nimport { IGraph } from \"../Graph/Graph\";\r\nimport Vertex, { Edge } from \"./GraphComponent\";\r\n\r\ninterface Props { \r\n  graph : IGraph,\r\n  updateGraph : Function\r\n  active : string,\r\n  hovered : string,\r\n  setHoverd : Function,\r\n  getColor : Function\r\n}\r\n\r\n\r\nconst contain = (value:number, min: number, max: number) => {\r\n  return Math.min(Math.max(value,min),max);\r\n}\r\n\r\nconst Canvas = (props: Props) => {\r\n\r\n  const canvas_ref = useRef<HTMLDivElement>(null);\r\n\r\n  const [dragging, isDragging] = useState<boolean>(false);\r\n\r\n  const get_local_position = (e: MouseEvent) => {\r\n    const canvas = canvas_ref.current!.getBoundingClientRect();\r\n    \r\n    return {\r\n      x: contain((e.clientX - canvas.left) * 100/canvas.width,0,100),\r\n      y: contain((e.clientY - canvas.top)* 100/canvas.height,0, 100),\r\n    }\r\n  }\r\n\r\n  const update = (e: MouseEvent,id:string=\"\") => {\r\n    props.updateGraph(id, get_local_position(e));\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  }\r\n  \r\n\r\n\r\n  return (\r\n    <div \r\n    ref = { canvas_ref}\r\n    className=\"canvas_container\"\r\n    onMouseDown={(e: MouseEvent) => update(e)}\r\n    onMouseMove={(e: MouseEvent) => {if(dragging) update(e, props.active)}}\r\n    onContextMenu={(e : MouseEvent) => {e.preventDefault();  console.log(props.graph);}}\r\n    onMouseUp={() => isDragging(false)}>\r\n     <svg width={'100%'} height={'100%'}>\r\n      {Object.entries(props.graph.edges).map((edge) => \r\n        (!edge[1].double || props.graph.directed) && <Edge \r\n          key={edge[0]}\r\n          id={edge[0]}\r\n          select={update}\r\n          setHovered={props.setHoverd}\r\n          value={edge[1].weight.toString()}\r\n          getColor={props.getColor}\r\n          position={props.graph.vertices[edge[1].vertices.a].position} \r\n\r\n          position2={props.graph.vertices[edge[1].vertices.b].position} \r\n          directed={props.graph.directed}\r\n          weighted={props.graph.weighted}\r\n        ></Edge>\r\n      )}\r\n\r\n      {Object.entries(props.graph.vertices).map((vertex) => \r\n        <Vertex \r\n          key={vertex[0]} \r\n          id={vertex[0]}\r\n          select={(e:MouseEvent,id:string) => {update(e,id); isDragging(true)}} \r\n          setHovered={props.setHoverd}\r\n          value={vertex[1].symbol}\r\n          getColor={props.getColor}\r\n          position={vertex[1].position}\r\n          \r\n          radius={3} \r\n        ></Vertex>\r\n      )}\r\n      </svg>\r\n    \r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas;"],"mappings":";;AAAA,SAAqBA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAO,gCAAgC;AAEvC,OAAOC,MAAM,IAAIC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYhD,MAAMC,OAAO,GAAGA,CAACC,KAAY,EAAEC,GAAW,EAAEC,GAAW,KAAK;EAC1D,OAAOC,IAAI,CAACF,GAAG,CAACE,IAAI,CAACD,GAAG,CAACF,KAAK,EAACC,GAAG,CAAC,EAACC,GAAG,CAAC;AAC1C,CAAC;AAED,MAAME,MAAM,GAAIC,KAAY,IAAK;EAAAC,EAAA;EAE/B,MAAMC,UAAU,GAAGd,MAAM,CAAiB,IAAI,CAAC;EAE/C,MAAM,CAACe,QAAQ,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAU,KAAK,CAAC;EAEvD,MAAMgB,kBAAkB,GAAIC,CAAa,IAAK;IAC5C,MAAMC,MAAM,GAAGL,UAAU,CAACM,OAAO,CAAEC,qBAAqB,CAAC,CAAC;IAE1D,OAAO;MACLC,CAAC,EAAEhB,OAAO,CAAC,CAACY,CAAC,CAACK,OAAO,GAAGJ,MAAM,CAACK,IAAI,IAAI,GAAG,GAACL,MAAM,CAACM,KAAK,EAAC,CAAC,EAAC,GAAG,CAAC;MAC9DC,CAAC,EAAEpB,OAAO,CAAC,CAACY,CAAC,CAACS,OAAO,GAAGR,MAAM,CAACS,GAAG,IAAG,GAAG,GAACT,MAAM,CAACU,MAAM,EAAC,CAAC,EAAE,GAAG;IAC/D,CAAC;EACH,CAAC;EAED,MAAMC,MAAM,GAAGA,CAACZ,CAAa,EAACa,EAAS,GAAC,EAAE,KAAK;IAC7CnB,KAAK,CAACoB,WAAW,CAACD,EAAE,EAAEd,kBAAkB,CAACC,CAAC,CAAC,CAAC;IAE5CA,CAAC,CAACe,eAAe,CAAC,CAAC;IACnBf,CAAC,CAACgB,cAAc,CAAC,CAAC;EACpB,CAAC;EAID,oBACE7B,OAAA;IACA8B,GAAG,EAAKrB,UAAW;IACnBsB,SAAS,EAAC,kBAAkB;IAC5BC,WAAW,EAAGnB,CAAa,IAAKY,MAAM,CAACZ,CAAC,CAAE;IAC1CoB,WAAW,EAAGpB,CAAa,IAAK;MAAC,IAAGH,QAAQ,EAAEe,MAAM,CAACZ,CAAC,EAAEN,KAAK,CAAC2B,MAAM,CAAC;IAAA,CAAE;IACvEC,aAAa,EAAGtB,CAAc,IAAK;MAACA,CAAC,CAACgB,cAAc,CAAC,CAAC;MAAGO,OAAO,CAACC,GAAG,CAAC9B,KAAK,CAAC+B,KAAK,CAAC;IAAC,CAAE;IACpFC,SAAS,EAAEA,CAAA,KAAM5B,UAAU,CAAC,KAAK,CAAE;IAAA6B,QAAA,eAClCxC,OAAA;MAAKoB,KAAK,EAAE,MAAO;MAACI,MAAM,EAAE,MAAO;MAAAgB,QAAA,GACjCC,MAAM,CAACC,OAAO,CAACnC,KAAK,CAAC+B,KAAK,CAACK,KAAK,CAAC,CAACC,GAAG,CAAEC,IAAI,IAC1C,CAAC,CAACA,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,IAAIvC,KAAK,CAAC+B,KAAK,CAACS,QAAQ,kBAAK/C,OAAA,CAACF,IAAI;QAEhD4B,EAAE,EAAEmB,IAAI,CAAC,CAAC,CAAE;QACZG,MAAM,EAAEvB,MAAO;QACfwB,UAAU,EAAE1C,KAAK,CAAC2C,SAAU;QAC5BhD,KAAK,EAAE2C,IAAI,CAAC,CAAC,CAAC,CAACM,MAAM,CAACC,QAAQ,CAAC,CAAE;QACjCC,QAAQ,EAAE9C,KAAK,CAAC8C,QAAS;QACzBC,QAAQ,EAAE/C,KAAK,CAAC+B,KAAK,CAACiB,QAAQ,CAACV,IAAI,CAAC,CAAC,CAAC,CAACU,QAAQ,CAACC,CAAC,CAAC,CAACF,QAAS;QAE5DG,SAAS,EAAElD,KAAK,CAAC+B,KAAK,CAACiB,QAAQ,CAACV,IAAI,CAAC,CAAC,CAAC,CAACU,QAAQ,CAACG,CAAC,CAAC,CAACJ,QAAS;QAC7DP,QAAQ,EAAExC,KAAK,CAAC+B,KAAK,CAACS,QAAS;QAC/BY,QAAQ,EAAEpD,KAAK,CAAC+B,KAAK,CAACqB;MAAS,GAV1Bd,IAAI,CAAC,CAAC,CAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWP,CACT,CAAC,EAEAtB,MAAM,CAACC,OAAO,CAACnC,KAAK,CAAC+B,KAAK,CAACiB,QAAQ,CAAC,CAACX,GAAG,CAAEoB,MAAM,iBAC/ChE,OAAA,CAACH,MAAM;QAEL6B,EAAE,EAAEsC,MAAM,CAAC,CAAC,CAAE;QACdhB,MAAM,EAAEA,CAACnC,CAAY,EAACa,EAAS,KAAK;UAACD,MAAM,CAACZ,CAAC,EAACa,EAAE,CAAC;UAAEf,UAAU,CAAC,IAAI,CAAC;QAAA,CAAE;QACrEsC,UAAU,EAAE1C,KAAK,CAAC2C,SAAU;QAC5BhD,KAAK,EAAE8D,MAAM,CAAC,CAAC,CAAC,CAACC,MAAO;QACxBZ,QAAQ,EAAE9C,KAAK,CAAC8C,QAAS;QACzBC,QAAQ,EAAEU,MAAM,CAAC,CAAC,CAAC,CAACV,QAAS;QAE7BY,MAAM,EAAE;MAAE,GARLF,MAAM,CAAC,CAAC,CAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASP,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIH,CAAC;AAEV,CAAC;AAACvD,EAAA,CApEIF,MAAM;AAAA6D,EAAA,GAAN7D,MAAM;AAsEZ,eAAeA,MAAM;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}