{"ast":null,"code":"var _jsxFileName = \"/home/lby005/Desktop/prodj/grapher/src/components/Canvas/Canvas.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport Vertex from \"../Graph/Vertex\";\nimport Edge from \"../Graph/Edge\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ext = {\n  radius: 30\n};\nconst contain = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\nconst Canvas = props => {\n  _s();\n  const canvas_ref = useRef(null);\n  const [verticies, updateVerticies] = useState({\n    0: {\n      x: 10,\n      y: 10\n    },\n    1: {\n      x: 200,\n      y: 40\n    },\n    2: {\n      x: 60,\n      y: 250\n    },\n    3: {\n      x: 250,\n      y: 250\n    }\n  });\n  const [edges, updateEdges] = useState({\n    0: {\n      a: 0,\n      b: 1\n    },\n    1: {\n      a: 1,\n      b: 2\n    }\n  });\n  const [targetID, setTargetID] = useState(null);\n  const get_local_position = e => {\n    const canvas = canvas_ref.current.getBoundingClientRect();\n    return {\n      x: contain(e.clientX - canvas.left - ext.radius / 2, 0, canvas.width - ext.radius),\n      y: contain(e.clientY - canvas.top - ext.radius / 2, 0, canvas.height - ext.radius)\n    };\n  };\n  const move = e => {\n    if (targetID == null) return;\n    const n = {\n      ...verticies\n    };\n    n[targetID] = get_local_position(e);\n    updateVerticies(old => n);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvas_ref,\n    className: \"canvas_container\",\n    onMouseMove: e => move(e),\n    onMouseUp: () => setTargetID(null),\n    children: [Object.entries(verticies).map(vertex => /*#__PURE__*/_jsxDEV(Vertex, {\n      pick: () => setTargetID(vertex[0]),\n      radius: ext.radius,\n      position: vertex[1]\n    }, vertex[0], false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 50\n    }, this)), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: '100%',\n      height: '100%',\n      children: Object.entries(edges).map(edge => /*#__PURE__*/_jsxDEV(Edge, {\n        vertexA: verticies[edge[1].a],\n        vertexB: verticies[edge[1].b],\n        offset: ext.radius / 2\n      }, edge[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"fk9/N1c8bw1ipjsP0e5dIvf9X30=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["useRef","useState","Vertex","Edge","jsxDEV","_jsxDEV","ext","radius","contain","value","min","max","Math","Canvas","props","_s","canvas_ref","verticies","updateVerticies","x","y","edges","updateEdges","a","b","targetID","setTargetID","get_local_position","e","canvas","current","getBoundingClientRect","clientX","left","width","clientY","top","height","move","n","old","ref","className","onMouseMove","onMouseUp","children","Object","entries","map","vertex","pick","position","fileName","_jsxFileName","lineNumber","columnNumber","edge","vertexA","vertexB","offset","_c","$RefreshReg$"],"sources":["/home/lby005/Desktop/prodj/grapher/src/components/Canvas/Canvas.tsx"],"sourcesContent":["import { MouseEvent, ReactNode, useCallback, useEffect, useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport Vertex from \"../Graph/Vertex\";\nimport Edge from \"../Graph/Edge\";\n\ninterface Props {\n\n}\n\nconst ext = {\n  radius : 30\n}\n\n\nconst contain = (value:number, min: number, max: number) => {\n  return Math.min(Math.max(value,min),max);\n}\n\nconst Canvas = (props: Props) => {\n\n  const canvas_ref = useRef<HTMLDivElement>(null);\n\n  const [verticies, updateVerticies] = useState<{[id:string]:{x:number,y:number}}>({0:{x:10,y:10},1:{x:200,y:40},2:{x:60,y:250},3:{x:250,y:250}});\n  const [edges, updateEdges] = useState<{[id:string]: {a:number,b:number}}>({0:{a:0,b:1}, 1:{a:1,b:2}});\n  const [targetID, setTargetID] = useState<string|null>(null);\n\n\n  const get_local_position = (e: MouseEvent) => {\n    const canvas = canvas_ref.current!.getBoundingClientRect();\n    return {\n      x: contain(e.clientX - canvas.left - ext.radius/2,0,canvas.width - ext.radius),\n      y: contain(e.clientY - canvas.top - ext.radius/2,0, canvas.height - ext.radius),\n    }\n  }\n\n  const move = (e: MouseEvent) => {\n    if (targetID == null ) return;\n    const n = {...verticies};\n    n[targetID] = get_local_position(e);\n    updateVerticies(old => n);\n  }\n\n  return (\n    <div \n    ref = { canvas_ref}\n    className=\"canvas_container\"\n    onMouseMove={(e: MouseEvent) => move(e)}\n    onMouseUp={() => setTargetID(null)}>\n\n      {Object.entries(verticies).map((vertex) => <Vertex key={vertex[0]} pick={() => setTargetID(vertex[0])} radius={ext.radius} position={vertex[1]}></Vertex>)}\n\n    \n      <svg width={'100%'} height={'100%'}>\n          {Object.entries(edges).map((edge) => <Edge key={edge[0]} vertexA={verticies[edge[1].a]} vertexB={verticies[edge[1].b]} offset={ext.radius/2}></Edge>)}\n      </svg>\n    \n\n\n    </div>\n  );\n};\n\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}