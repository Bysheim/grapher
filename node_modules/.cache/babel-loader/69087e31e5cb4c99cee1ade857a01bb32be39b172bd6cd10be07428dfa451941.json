{"ast":null,"code":"/**\n * returns the normal of a vector between two points\n * @param p1 start of the vector\n * @param p2 end of the vector\n * @param length adjust the length of the normal\n * @returns the normal of the vector, with length = length\n */export var normal=function normal(p1,p2){var length=arguments.length>2&&arguments[2]!==undefined?arguments[2]:2;var dx=p2.x-p1.x;var dy=p2.y-p1.y;var dLength=Math.sqrt(Math.pow(dx,2)+Math.pow(dy,2));return{x:-dy/dLength*length,y:dx/dLength*length};};/**\n * the average of two numbers\n * @param a first number\n * @param b second number\n * @returns the average of a and b\n */export var average=function average(a,b){return(a+b)/2;};/**\n * contain a value between two other values\n * @param value the value to contain\n * @param min if the value is smaller than min, return min\n * @param max if the value is greater than max, return max\n * @returns \n */export var contain=function contain(value,min,max){return Math.min(Math.max(value,min),max);};/**\n * Get the position in percentage of a value in a range of a given length starting in min.\n * @param value the value to find the position of\n * @param min the start of the range\n * @param length the length of the range\n * @returns some value between 0 and 100\n */export var relPos=function relPos(value,min,length){return contain((value-min)*100/length,0,100);};","map":{"version":3,"names":["normal","p1","p2","length","arguments","undefined","dx","x","dy","y","dLength","Math","sqrt","pow","average","a","b","contain","value","min","max","relPos"],"sources":["/home/lby005/Desktop/prodj/delt/grapher/src/tools/Geometry.ts"],"sourcesContent":["\n/**\n * returns the normal of a vector between two points\n * @param p1 start of the vector\n * @param p2 end of the vector\n * @param length adjust the length of the normal\n * @returns the normal of the vector, with length = length\n */\nexport const normal = (p1:{x:number,y:number}, p2: {x:number,y:number}, length : number = 2) => {\n    let dx = p2.x - p1.x;\n    let dy = p2.y - p1.y;\n\n    let dLength = Math.sqrt(dx ** 2 + dy**2);\n    \n    return {x : -dy/dLength * length, y : dx/dLength * length};\n}\n\n/**\n * the average of two numbers\n * @param a first number\n * @param b second number\n * @returns the average of a and b\n */\nexport const average = (a:number, b: number) => {\n    return (a + b) / 2\n}\n\n/**\n * contain a value between two other values\n * @param value the value to contain\n * @param min if the value is smaller than min, return min\n * @param max if the value is greater than max, return max\n * @returns \n */\nexport const contain = (value:number, min: number, max: number) => {\n    return Math.min(Math.max(value,min),max);\n}\n\n/**\n * Get the position in percentage of a value in a range of a given length starting in min.\n * @param value the value to find the position of\n * @param min the start of the range\n * @param length the length of the range\n * @returns some value between 0 and 100\n */\nexport const relPos = (value:number, min: number, length:number) => {\n    return  contain((value - min) * 100/length,0,100);\n}"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAA,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAIC,EAAsB,CAAEC,EAAuB,CAA0B,IAAxB,CAAAC,MAAe,CAAAC,SAAA,CAAAD,MAAA,IAAAC,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,CACvF,GAAI,CAAAE,EAAE,CAAGJ,EAAE,CAACK,CAAC,CAAGN,EAAE,CAACM,CAAC,CACpB,GAAI,CAAAC,EAAE,CAAGN,EAAE,CAACO,CAAC,CAAGR,EAAE,CAACQ,CAAC,CAEpB,GAAI,CAAAC,OAAO,CAAGC,IAAI,CAACC,IAAI,CAACD,IAAA,CAAAE,GAAA,CAAAP,EAAE,CAAI,CAAC,EAAAK,IAAA,CAAAE,GAAA,CAAGL,EAAE,CAAE,CAAC,EAAC,CAExC,MAAO,CAACD,CAAC,CAAG,CAACC,EAAE,CAACE,OAAO,CAAGP,MAAM,CAAEM,CAAC,CAAGH,EAAE,CAACI,OAAO,CAAGP,MAAM,CAAC,CAC9D,CAAC,CAED;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAW,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIC,CAAQ,CAAEC,CAAS,CAAK,CAC5C,MAAO,CAACD,CAAC,CAAGC,CAAC,EAAI,CAAC,CACtB,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIC,KAAY,CAAEC,GAAW,CAAEC,GAAW,CAAK,CAC/D,MAAO,CAAAT,IAAI,CAACQ,GAAG,CAACR,IAAI,CAACS,GAAG,CAACF,KAAK,CAACC,GAAG,CAAC,CAACC,GAAG,CAAC,CAC5C,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAIH,KAAY,CAAEC,GAAW,CAAEhB,MAAa,CAAK,CAChE,MAAQ,CAAAc,OAAO,CAAC,CAACC,KAAK,CAAGC,GAAG,EAAI,GAAG,CAAChB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CACrD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}