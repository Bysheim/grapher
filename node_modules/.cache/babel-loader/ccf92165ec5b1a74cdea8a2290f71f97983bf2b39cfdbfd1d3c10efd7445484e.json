{"ast":null,"code":"var _jsxFileName = \"/home/lby005/Desktop/prodj/grapher/src/components/Canvas/Canvas.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport Vertex from \"../Graph/Vertex\";\nimport Edge from \"../Graph/Edge\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contain = (value, min, max) => {\n  return Math.min(Math.max(value, min), max);\n};\nconst Canvas = props => {\n  _s();\n  const canvas_ref = useRef(null);\n  const [radius, setRadius] = useState(30);\n  const [targetID, setTargetID] = useState('');\n  const [dragging, isDragging] = useState(false);\n  const get_local_position = e => {\n    const canvas = canvas_ref.current.getBoundingClientRect();\n    return {\n      x: contain(e.clientX - canvas.left - radius / 2, 0, canvas.width - radius),\n      y: contain(e.clientY - canvas.top - radius / 2, 0, canvas.height - radius)\n    };\n  };\n  const move = e => {\n    if (!dragging) return;\n    props.grafEdit.moveVertex(targetID, get_local_position(e));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvas_ref,\n    className: \"canvas_container\",\n    onClick: e => e.ctrlKey ? () => {} : props.grafEdit.newVertex(get_local_position(e)),\n    onMouseMove: e => move(e),\n    onMouseUp: () => isDragging(false),\n    children: [Object.entries(props.graph.vertices).map(vertex => /*#__PURE__*/_jsxDEV(Vertex, {\n      pick: () => {\n        setTargetID(vertex[1].id);\n        isDragging(true);\n      },\n      active: targetID == vertex[1].id,\n      radius: radius,\n      position: vertex[1].position,\n      addEdge: () => props.grafEdit.newEdge(vertex[1].id, targetID)\n    }, vertex[1].id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: '100%',\n      height: '100%',\n      children: Object.entries(props.graph.edges).map(edge => /*#__PURE__*/_jsxDEV(Edge, {\n        pick: () => setTargetID(edge[1].id),\n        active: targetID == edge[1].id,\n        vertexA: props.graph.vertices.filter(g => g.id == edge[1].vertices.a)[0].position,\n        vertexB: props.graph.vertices.filter(g => g.id == edge[1].vertices.b)[0].position,\n        offset: radius / 2\n      }, edge[1].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"PUIh9S2Y3lTM/b8yGitNBRj2Gl4=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["useRef","useState","Vertex","Edge","jsxDEV","_jsxDEV","contain","value","min","max","Math","Canvas","props","_s","canvas_ref","radius","setRadius","targetID","setTargetID","dragging","isDragging","get_local_position","e","canvas","current","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","move","grafEdit","moveVertex","ref","className","onClick","ctrlKey","newVertex","onMouseMove","onMouseUp","children","Object","entries","graph","vertices","map","vertex","pick","id","active","position","addEdge","newEdge","fileName","_jsxFileName","lineNumber","columnNumber","edges","edge","vertexA","filter","g","a","vertexB","b","offset","_c","$RefreshReg$"],"sources":["/home/lby005/Desktop/prodj/grapher/src/components/Canvas/Canvas.tsx"],"sourcesContent":["import { MouseEvent, ReactNode, useCallback, useEffect, useRef, useState } from \"react\";\nimport \"../../styles/Canvas/Canvas.css\";\nimport Vertex from \"../Graph/Vertex\";\nimport Edge from \"../Graph/Edge\";\nimport { IGraph } from \"../Graph/Graph\";\n\ninterface Props { \n  graph : IGraph,\n  grafEdit : {\n    newVertex : Function,\n    deleteVertex : Function,\n    newEdge : Function,\n    deleteEdge: Function,\n    moveVertex: Function\n  },\n\n}\n\n\nconst contain = (value:number, min: number, max: number) => {\n  return Math.min(Math.max(value,min),max);\n}\n\nconst Canvas = (props: Props) => {\n\n  const canvas_ref = useRef<HTMLDivElement>(null);\n\n\n  const [radius, setRadius] = useState<number>(30);\n  const [targetID, setTargetID] = useState<string>('');\n  const [dragging, isDragging] = useState<boolean>(false);\n\n\n  const get_local_position = (e: MouseEvent) => {\n    const canvas = canvas_ref.current!.getBoundingClientRect();\n    return {\n      x: contain(e.clientX - canvas.left - radius/2,0,canvas.width - radius),\n      y: contain(e.clientY - canvas.top - radius/2,0, canvas.height - radius),\n    }\n  }\n\n  const move = (e: MouseEvent) => {\n    if ( !dragging ) return;\n    props.grafEdit.moveVertex(targetID, get_local_position(e));\n  }\n  \n\n\n  return (\n    <div \n    ref = { canvas_ref}\n    className=\"canvas_container\"\n    onClick={(e: MouseEvent) => e.ctrlKey ? () => {} : props.grafEdit.newVertex(get_local_position(e))}\n    onMouseMove={(e: MouseEvent) => move(e)}\n    onMouseUp={() => isDragging(false)}>\n\n      {Object.entries(props.graph.vertices).map((vertex) => \n        <Vertex \n          key={vertex[1].id} \n          pick={() => {setTargetID(vertex[1].id); isDragging(true)}} \n          active={targetID == vertex[1].id} \n          radius={radius} \n          position={vertex[1].position}\n          addEdge={() => props.grafEdit.newEdge(vertex[1].id, targetID)}\n        ></Vertex>\n      )}\n\n      <svg width={'100%'} height={'100%'}>\n          {Object.entries(props.graph.edges).map((edge) => \n            <Edge \n              key={edge[1].id} \n              pick={() => setTargetID(edge[1].id)} \n              active={targetID == edge[1].id} \n              vertexA={props.graph.vertices.filter(g => g.id == edge[1].vertices.a)[0].position} \n              vertexB={props.graph.vertices.filter(g => g.id == edge[1].vertices.b)[0].position} \n              offset={radius/2}\n            ></Edge>\n          )}\n      </svg>\n    \n\n\n    </div>\n  );\n};\n\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}